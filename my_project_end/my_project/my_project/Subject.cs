//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace my_project
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    public partial class Subject
    {
        public Subject()
        {
            this.Exams = new HashSet<Exam>();
            this.SubjectLectures = new HashSet<SubjectLecture>();
        }
        Database1Entities context;

        public int Id { get; set; }
        public Nullable<int> DepartmentId { get; set; }
        public string Name { get; set; }
        public int MinimumDegree { get; set; }
        public int Term { get; set; }
        public int Year { get; set; }

        public virtual Department Department { get; set; }
        public virtual ICollection<Exam> Exams { get; set; }
        public virtual ICollection<SubjectLecture> SubjectLectures { get; set; }
        public void AddData()
        {
            Console.WriteLine("Enter the  DepartmentId Of Subject");
            DepartmentId = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the Name Of Subject");
            Name = Console.ReadLine();
            Console.WriteLine("Enter the MinimumDegree Of Subject");
            MinimumDegree = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the Term Of Subject");
            Term = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the Year Of Subject");
            Year = int.Parse(Console.ReadLine());
        }
        public void InsertSubject()
        {
            try
            {
                context = new Database1Entities();
                AddData();
                var subject = new Subject
                {
                    Name = Name.ToUpper(),
                    MinimumDegree = MinimumDegree,
                    Term = Term,
                    Year = Year,
                    DepartmentId = DepartmentId
                };
                context.Subjects.Add(subject);
                context.SaveChanges();
                Console.WriteLine("The record has been added successfully.");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }

        public void DeleteSubject()
        {
            try
            {
                context = new Database1Entities();
                Console.WriteLine("Please enter the Subject number you want to delete:");
                int subjectId = Convert.ToInt32(Console.ReadLine());
                var subject = context.Subjects.Find(subjectId);
                if (subject != null)
                {
                    context.Subjects.Remove(subject);
                    context.SaveChanges();
                    Console.WriteLine("The record has been deleted successfully.");
                }
                else
                {
                    Console.WriteLine("No records were found matching the specified criteria.");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void FullDeleteSubject()
        {
            try
            {
                context = new Database1Entities();
                var subjects = context.Subjects.ToList();
                if (subjects.Count > 0)
                {
                    context.Subjects.RemoveRange(subjects);
                    context.SaveChanges();
                    Console.WriteLine("All records have been deleted successfully.");
                }
                else
                {
                    Console.WriteLine("No records were found matching the specified criteria.");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }

        public void FullUpdateSubject()
        {
            try
            {
                context = new Database1Entities();
                Console.WriteLine("Please enter the Subject number you want to modify:");
                int subjectId = Convert.ToInt32(Console.ReadLine());

                var subject = context.Subjects.Find(subjectId);
                if (subject != null)
                {
                    AddData();
                    subject.Name = Name.ToUpper();
                    subject.MinimumDegree = MinimumDegree;
                    subject.Term = Term;
                    subject.Year = Year;
                    subject.DepartmentId = DepartmentId;
                    context.SaveChanges();
                    Console.WriteLine("The record has been updated successfully.");
                }
                else
                {
                    Console.WriteLine("No records were found matching the specified criteria.");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void UpdateSubject()
        {
            try
            {
                context = new Database1Entities();
                Console.WriteLine("Please enter the Subject number you want to modify:");
                int subjectId = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("What do you want to modify?");
                Console.WriteLine("1. Name");
                Console.WriteLine("2. MinimumDegree");
                Console.WriteLine("3. Term");
                Console.WriteLine("4. Year");
                Console.WriteLine("5. DepartmentId");
                Console.WriteLine("Anything to close");
                int choice = Convert.ToInt32(Console.ReadLine());

                var subject = context.Subjects.Find(subjectId);
                if (subject != null)
                {
                    switch (choice)
                    {
                        case 1:
                            Console.WriteLine("Please enter the new Name:");
                            subject.Name = Console.ReadLine().ToUpper();
                            break;
                        case 2:
                            Console.WriteLine("Please enter the new MinimumDegree:");
                            subject.MinimumDegree = Convert.ToInt32(Console.ReadLine());
                            break;
                        case 3:
                            Console.WriteLine("Please enter the new Term:");
                            subject.Term = Convert.ToInt32(Console.ReadLine());
                            break;
                        case 4:
                            Console.WriteLine("Please enter the new Year:");
                            subject.Year = Convert.ToInt32(Console.ReadLine());
                            break;
                        case 5:
                            Console.WriteLine("Please enter the new DepartmentId:");
                            subject.DepartmentId = Convert.ToInt32(Console.ReadLine());
                            break;
                        default:
                            return;
                    }

                    context.SaveChanges();
                    Console.WriteLine("The data has been updated successfully.");
                }
                else
                {
                    Console.WriteLine("No records were found matching the specified criteria.");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }

        public void ShowDataSubject()
{
     context = new Database1Entities();
    
        var subjects = context.Subjects.ToList();
        if (subjects.Count == 0)
        {
            Console.WriteLine("No matching record found.");
        }
        else
        {
            foreach (var subject in subjects)
            {
                Console.WriteLine("ID: {0} , Name: {1} , MinimumDegree: {2} , Term: {3} , Year: {4} , DepartmentId: {5}",subject.Id,subject.Name,subject.MinimumDegree,subject.Term,subject.Year,subject.DepartmentId);
                Console.WriteLine("=====================================================================================");
            }
        
    }
}
        public void ShowDataSubjectWithId()
{
     context= new Database1Entities();
    
        Console.WriteLine("Please enter the Subject number you want to view");
        int subjectId = Convert.ToInt32(Console.ReadLine());
        var subject = context.Subjects.FirstOrDefault(s => s.Id == subjectId);
        if (subject == null)
        {
            Console.WriteLine("No matching record found.");
        }
        else
        {
            Console.WriteLine("ID: {0} , Name: {1} , MinimumDegree: {2} , Term: {3} , Year: {4} , DepartmentId: {5}", subject.Id, subject.Name, subject.MinimumDegree, subject.Term, subject.Year, subject.DepartmentId);
            Console.WriteLine("=====================================================================================");
        }
}
        public void start_subject()
        {

            int choice;
            do
            {
                Console.WriteLine("What do you want to do in the Subject table");
                Console.WriteLine("1. InsertSubject\n==============================");
                Console.WriteLine("2. DeleteSubject\n==============================");
                Console.WriteLine("3. FullDeleteSubjectLecture\n==============================");
                Console.WriteLine("4. FullUpdateSubject\n==============================");
                Console.WriteLine("5. UpdateSubject\n==============================");
                Console.WriteLine("6. ShowDataSubject\n==============================");
                Console.WriteLine("7. ShowDataSubjectWithId\n==============================");
                Console.WriteLine("0. To Close");
                choice = Convert.ToInt32(Console.ReadLine());

                switch (choice)
                {
                    case 1:
                        InsertSubject();
                        break;
                    case 2:
                        DeleteSubject();
                        break;
                    case 3:
                        FullDeleteSubject();
                        break;
                    case 4:
                        FullUpdateSubject();
                        break;
                    case 5:
                        UpdateSubject();
                        break;
                    case 6:
                        ShowDataSubject();
                        break;
                    case 7:
                        ShowDataSubjectWithId();
                        break;
                }
            } while (choice != 0);
        }
    
    
    }
}
