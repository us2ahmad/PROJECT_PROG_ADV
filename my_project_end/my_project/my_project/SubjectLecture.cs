//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace my_project
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using System.Data.SqlClient;
    using System.Data.Entity;

    public partial class SubjectLecture
    {
       
        Database1Entities context;
        public int Id { get; set; }
        public int SubjectId { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }
        public virtual Subject Subject { get; set; }
        public void AddData()
        {
            Console.WriteLine("Enter the Title Of SubjectLecture");
            Title = Console.ReadLine();
            Console.WriteLine("Enter the Content Of SubjectLecture");
            Content = Console.ReadLine();
            Console.WriteLine("Enter the SubjectId Of SubjectLecture");
            SubjectId = int.Parse(Console.ReadLine());
        }
        public void InsertSubjectLecture()
        {
            try
            {
                context = new Database1Entities();
                AddData();
                    var subjectLecture = new SubjectLecture
                    {
                        Title = Title.ToUpper(),
                        Content = Content.ToUpper(),
                        SubjectId = SubjectId
                    };
                    context.SubjectLectures.Add(subjectLecture);
                    int rowsAffected = context.SaveChanges();

                    if (rowsAffected > 0)
                    {
                        Console.WriteLine("The record has been added successfully.");
                    }
                    else
                    {
                        Console.WriteLine("An error occurred while adding the record.");
                    }
               
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void DeleteSubjectLecture()
        {
            try
            {
               context = new Database1Entities();
                
                    Console.WriteLine("Please enter the SubjectLecture number you want to delete:");
                    int subjectLectureId = Convert.ToInt32(Console.ReadLine());

                    var subjectLectureToDelete = context.SubjectLectures.Find(subjectLectureId);

                    if (subjectLectureToDelete != null)
                    {   context.SubjectLectures.Remove(subjectLectureToDelete);
                        int rowsAffected = context.SaveChanges();
                        if (rowsAffected > 0)
                        {
                            Console.WriteLine("The record has been deleted successfully.");
                        }
                        else
                        {
                            Console.WriteLine("An error occurred while deleting the record.");
                        }
                    }
                    else
                    {
                        Console.WriteLine("No records were found matching the specified criteria.");
                    }
                }
            
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }}
        public void FullDeleteSubjectLecture()
        {
            try
            {
                context = new Database1Entities();

                context.Database.ExecuteSqlCommand("DELETE FROM SubjectLectures");
                context.Database.ExecuteSqlCommand("DBCC CHECKIDENT ('SubjectLectures', RESEED, 0)");
                Console.WriteLine("The records have been deleted successfully.");
                
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void FullUpdateSubjectLecture()
        {
            try
            {
                Console.WriteLine("Please enter the SubjectLecture number you want to modify:");
                int SubjectLectureid = Convert.ToInt32(Console.ReadLine());
                     AddData();
                     context = new Database1Entities();
                    var subjectLecture = context.SubjectLectures.Find(SubjectLectureid);
                    if (subjectLecture != null)
                    {
                        subjectLecture.Title = Title.ToUpper();
                        subjectLecture.Content = Content.ToUpper();
                        subjectLecture.SubjectId = SubjectId;
                        context.SaveChanges();
                        Console.WriteLine("The record has been updated successfully.");
                    }
                    else
                    {
                        Console.WriteLine("No records were found matching the specified criteria.");
                    }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void UpdateSubjectLecture()
        {
            try
            {
                Console.WriteLine("Please enter the SubjectLectures number you want to modify:");
                int SubjectLectureid = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("What do you want to modify?");
                Console.WriteLine("1. Title");
                Console.WriteLine("2. Content");
                Console.WriteLine("3. SubjectId");
                Console.WriteLine("0. To Close");
                int choice = Convert.ToInt32(Console.ReadLine());
                string column = "";
                switch (choice)
                {
                    case 1:
                        column = "Title";
                        break;
                    case 2:
                        column = "Content";
                        break;
                    case 3:
                        column = "SubjectId";
                        break;
                    default:
                        return;
                }

                Console.WriteLine("Please enter the new value:");
                string value = Console.ReadLine();

                context = new Database1Entities();
                
                    var subjectLecture = context.SubjectLectures.Find(SubjectLectureid);
                    if (subjectLecture != null)
                    {
                        if (column == "Title")
                        {
                            subjectLecture.Title = value;
                        }
                        else if (column == "Content")
                        {
                            subjectLecture.Content = value;
                        }
                        else if (column == "SubjectId")
                        {
                            subjectLecture.SubjectId = Convert.ToInt32(value);
                        }

                        context.SaveChanges();
                        Console.WriteLine("The data has been updated successfully.");
                    }
                    else
                    {
                        Console.WriteLine("No records were found matching the specified criteria.");
                    }
                
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void ShowDataSubjectLecture()
{
    try
    {
        context = new Database1Entities();
        
            var subjectLectures = context.SubjectLectures.ToList();
            if (subjectLectures.Count > 0)
            {
                foreach (var subjectLecture in subjectLectures)
                {
                    Console.WriteLine("ID: {0} , Title: {1} , Content: {2} , SubjectId: {3}",subjectLecture.Id,subjectLecture.Title,subjectLecture.Content,subjectLecture.SubjectId);
                    Console.WriteLine("=====================================================================================");
                }
            }
            else
            {
                Console.WriteLine("No matching record found.");
            }
        
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}
        public void ShowDataSubjectLectureWithId()
{
    try
    {
        Console.WriteLine("Please the SubjectLecture number you want to view");
        int subjectLectureId = Convert.ToInt32(Console.ReadLine());

        context = new Database1Entities();
        
            var subjectLecture = context.SubjectLectures.FirstOrDefault(sl => sl.Id == subjectLectureId);
            if (subjectLecture != null)
            {
                Console.WriteLine("ID: {0} , Title: {1} , Content: {2} , SubjectId: {3}",subjectLecture.Id,subjectLecture.Title,subjectLecture.Content,subjectLecture.SubjectId);
                Console.WriteLine("=====================================================================================");
            }
            else
            {
                Console.WriteLine("No matching record found.");
            }
        
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}
        public void ShowDataCountSubjectLecture()
        {
            Console.WriteLine("Enter the subjectId ");
            int subjectId = int.Parse(Console.ReadLine());
            context = new Database1Entities();
            
                var query = from sub in context.Subjects
                            join sublec in context.SubjectLectures on sub.Id equals sublec.SubjectId
                            where sub.Id == subjectId
                            group sub by new { sub.Id, sub.Name } into g
                            select new { ID = g.Key.Id, SubjectName = g.Key.Name, CountSubjectLecture = g.Count() };

                var result = query.FirstOrDefault();
                if (result == null)
                {
                    Console.WriteLine("No matching record found.");
                    return;
                }

                Console.WriteLine($"ID: {result.ID} , SubjectName: {result.SubjectName} , CountSubjectLecture: {result.CountSubjectLecture}");
                Console.WriteLine("=====================================================================================");
            
        }
        public void start_SubjectLecture()
        {

            int choice;
            do
            {
                Console.WriteLine("What do you want to do in the Subject table");
                Console.WriteLine("1. InsertSubjectLecture\n==============================");
                Console.WriteLine("2. DeleteSubjectLecture\n==============================");
                Console.WriteLine("3. FullDeleteSubjectLecture\n==============================");
                Console.WriteLine("4. FullUpdateSubjectLecture\n==============================");
                Console.WriteLine("5. UpdateSubjectLecture\n==============================");
                Console.WriteLine("6. ShowDataSubjectLecture\n==============================");
                Console.WriteLine("7. ShowDataSubjectLectureWithId\n==============================");
                Console.WriteLine("8. ShowDataCountSubjectLecture\n==============================");
                Console.WriteLine("0. To Close");
                choice = Convert.ToInt32(Console.ReadLine());

                switch (choice)
                {
                    case 1:
                        InsertSubjectLecture();
                        break;
                    case 2:

                        DeleteSubjectLecture();
                        break;
                    case 3:

                        FullDeleteSubjectLecture();
                        break;
                    case 4:

                        FullUpdateSubjectLecture();
                        break;
                    case 5:
                        UpdateSubjectLecture();
                        break;
                    case 6:
                        ShowDataSubjectLecture();
                        break;
                    case 7:
                        ShowDataSubjectLectureWithId();

                        break;
                    case 8:
                        ShowDataCountSubjectLecture();

                        break;
                }
            } while (choice != 0);
        }

    
    
    
    
    
    
    
    
    
    }
}
